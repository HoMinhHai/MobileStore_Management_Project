#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAMH_MuaBanVaSuaChuaDienThoai.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_DienThoai")]
	public partial class QuanLyDienThoaiDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertANHSP(ANHSP instance);
    partial void UpdateANHSP(ANHSP instance);
    partial void DeleteANHSP(ANHSP instance);
    partial void InsertTS_KYTHUAT(TS_KYTHUAT instance);
    partial void UpdateTS_KYTHUAT(TS_KYTHUAT instance);
    partial void DeleteTS_KYTHUAT(TS_KYTHUAT instance);
    partial void InsertBAOHANH(BAOHANH instance);
    partial void UpdateBAOHANH(BAOHANH instance);
    partial void DeleteBAOHANH(BAOHANH instance);
    partial void InsertBINHLUAN(BINHLUAN instance);
    partial void UpdateBINHLUAN(BINHLUAN instance);
    partial void DeleteBINHLUAN(BINHLUAN instance);
    partial void InsertCAPNHATGIA(CAPNHATGIA instance);
    partial void UpdateCAPNHATGIA(CAPNHATGIA instance);
    partial void DeleteCAPNHATGIA(CAPNHATGIA instance);
    partial void InsertCHITIETNHAP(CHITIETNHAP instance);
    partial void UpdateCHITIETNHAP(CHITIETNHAP instance);
    partial void DeleteCHITIETNHAP(CHITIETNHAP instance);
    partial void InsertCHITIETXUAT(CHITIETXUAT instance);
    partial void UpdateCHITIETXUAT(CHITIETXUAT instance);
    partial void DeleteCHITIETXUAT(CHITIETXUAT instance);
    partial void InsertCUAHANG(CUAHANG instance);
    partial void UpdateCUAHANG(CUAHANG instance);
    partial void DeleteCUAHANG(CUAHANG instance);
    partial void InsertGIAMGIA(GIAMGIA instance);
    partial void UpdateGIAMGIA(GIAMGIA instance);
    partial void DeleteGIAMGIA(GIAMGIA instance);
    partial void InsertHANG(HANG instance);
    partial void UpdateHANG(HANG instance);
    partial void DeleteHANG(HANG instance);
    partial void InsertHOTRO(HOTRO instance);
    partial void UpdateHOTRO(HOTRO instance);
    partial void DeleteHOTRO(HOTRO instance);
    partial void InsertKEMTHEO(KEMTHEO instance);
    partial void UpdateKEMTHEO(KEMTHEO instance);
    partial void DeleteKEMTHEO(KEMTHEO instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertKM(KM instance);
    partial void UpdateKM(KM instance);
    partial void DeleteKM(KM instance);
    partial void InsertLOAISANPHAM(LOAISANPHAM instance);
    partial void UpdateLOAISANPHAM(LOAISANPHAM instance);
    partial void DeleteLOAISANPHAM(LOAISANPHAM instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertNHAPHANPHOI(NHAPHANPHOI instance);
    partial void UpdateNHAPHANPHOI(NHAPHANPHOI instance);
    partial void DeleteNHAPHANPHOI(NHAPHANPHOI instance);
    partial void InsertPHIEUBAOHANH(PHIEUBAOHANH instance);
    partial void UpdatePHIEUBAOHANH(PHIEUBAOHANH instance);
    partial void DeletePHIEUBAOHANH(PHIEUBAOHANH instance);
    partial void InsertPHIEUNHAP(PHIEUNHAP instance);
    partial void UpdatePHIEUNHAP(PHIEUNHAP instance);
    partial void DeletePHIEUNHAP(PHIEUNHAP instance);
    partial void InsertPHIEUXUAT(PHIEUXUAT instance);
    partial void UpdatePHIEUXUAT(PHIEUXUAT instance);
    partial void DeletePHIEUXUAT(PHIEUXUAT instance);
    partial void InsertPHUKIENKEM(PHUKIENKEM instance);
    partial void UpdatePHUKIENKEM(PHUKIENKEM instance);
    partial void DeletePHUKIENKEM(PHUKIENKEM instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertSP_CO_KT(SP_CO_KT instance);
    partial void UpdateSP_CO_KT(SP_CO_KT instance);
    partial void DeleteSP_CO_KT(SP_CO_KT instance);
    partial void InsertSUACHUA(SUACHUA instance);
    partial void UpdateSUACHUA(SUACHUA instance);
    partial void DeleteSUACHUA(SUACHUA instance);
    #endregion
		
		public QuanLyDienThoaiDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QL_DienThoaiConnectionString2"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyDienThoaiDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyDienThoaiDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyDienThoaiDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyDienThoaiDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ANHSP> ANHSPs
		{
			get
			{
				return this.GetTable<ANHSP>();
			}
		}
		
		public System.Data.Linq.Table<TS_KYTHUAT> TS_KYTHUATs
		{
			get
			{
				return this.GetTable<TS_KYTHUAT>();
			}
		}
		
		public System.Data.Linq.Table<BAOHANH> BAOHANHs
		{
			get
			{
				return this.GetTable<BAOHANH>();
			}
		}
		
		public System.Data.Linq.Table<BINHLUAN> BINHLUANs
		{
			get
			{
				return this.GetTable<BINHLUAN>();
			}
		}
		
		public System.Data.Linq.Table<CAPNHATGIA> CAPNHATGIAs
		{
			get
			{
				return this.GetTable<CAPNHATGIA>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETNHAP> CHITIETNHAPs
		{
			get
			{
				return this.GetTable<CHITIETNHAP>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETXUAT> CHITIETXUATs
		{
			get
			{
				return this.GetTable<CHITIETXUAT>();
			}
		}
		
		public System.Data.Linq.Table<CUAHANG> CUAHANGs
		{
			get
			{
				return this.GetTable<CUAHANG>();
			}
		}
		
		public System.Data.Linq.Table<GIAMGIA> GIAMGIAs
		{
			get
			{
				return this.GetTable<GIAMGIA>();
			}
		}
		
		public System.Data.Linq.Table<HANG> HANGs
		{
			get
			{
				return this.GetTable<HANG>();
			}
		}
		
		public System.Data.Linq.Table<HOTRO> HOTROs
		{
			get
			{
				return this.GetTable<HOTRO>();
			}
		}
		
		public System.Data.Linq.Table<KEMTHEO> KEMTHEOs
		{
			get
			{
				return this.GetTable<KEMTHEO>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<KM> KMs
		{
			get
			{
				return this.GetTable<KM>();
			}
		}
		
		public System.Data.Linq.Table<LOAISANPHAM> LOAISANPHAMs
		{
			get
			{
				return this.GetTable<LOAISANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<NHAPHANPHOI> NHAPHANPHOIs
		{
			get
			{
				return this.GetTable<NHAPHANPHOI>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUBAOHANH> PHIEUBAOHANHs
		{
			get
			{
				return this.GetTable<PHIEUBAOHANH>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this.GetTable<PHIEUNHAP>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUXUAT> PHIEUXUATs
		{
			get
			{
				return this.GetTable<PHIEUXUAT>();
			}
		}
		
		public System.Data.Linq.Table<PHUKIENKEM> PHUKIENKEMs
		{
			get
			{
				return this.GetTable<PHUKIENKEM>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<SP_CO_KT> SP_CO_KTs
		{
			get
			{
				return this.GetTable<SP_CO_KT>();
			}
		}
		
		public System.Data.Linq.Table<SUACHUA> SUACHUAs
		{
			get
			{
				return this.GetTable<SUACHUA>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ANHSP")]
	public partial class ANHSP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ANH_ID;
		
		private string _MASP;
		
		private string _ANH_URL;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnANH_IDChanging(int value);
    partial void OnANH_IDChanged();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnANH_URLChanging(string value);
    partial void OnANH_URLChanged();
    #endregion
		
		public ANHSP()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANH_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ANH_ID
		{
			get
			{
				return this._ANH_ID;
			}
			set
			{
				if ((this._ANH_ID != value))
				{
					this.OnANH_IDChanging(value);
					this.SendPropertyChanging();
					this._ANH_ID = value;
					this.SendPropertyChanged("ANH_ID");
					this.OnANH_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANH_URL", DbType="VarChar(100)")]
		public string ANH_URL
		{
			get
			{
				return this._ANH_URL;
			}
			set
			{
				if ((this._ANH_URL != value))
				{
					this.OnANH_URLChanging(value);
					this.SendPropertyChanging();
					this._ANH_URL = value;
					this.SendPropertyChanged("ANH_URL");
					this.OnANH_URLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_ANHSP", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.ANHSPs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.ANHSPs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TS_KYTHUAT")]
	public partial class TS_KYTHUAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KT_ID;
		
		private string _KT_TEN;
		
		private string _KT_GIATRI;
		
		private EntitySet<SP_CO_KT> _SP_CO_KTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKT_IDChanging(int value);
    partial void OnKT_IDChanged();
    partial void OnKT_TENChanging(string value);
    partial void OnKT_TENChanged();
    partial void OnKT_GIATRIChanging(string value);
    partial void OnKT_GIATRIChanged();
    #endregion
		
		public TS_KYTHUAT()
		{
			this._SP_CO_KTs = new EntitySet<SP_CO_KT>(new Action<SP_CO_KT>(this.attach_SP_CO_KTs), new Action<SP_CO_KT>(this.detach_SP_CO_KTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KT_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int KT_ID
		{
			get
			{
				return this._KT_ID;
			}
			set
			{
				if ((this._KT_ID != value))
				{
					this.OnKT_IDChanging(value);
					this.SendPropertyChanging();
					this._KT_ID = value;
					this.SendPropertyChanged("KT_ID");
					this.OnKT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KT_TEN", DbType="NVarChar(50)")]
		public string KT_TEN
		{
			get
			{
				return this._KT_TEN;
			}
			set
			{
				if ((this._KT_TEN != value))
				{
					this.OnKT_TENChanging(value);
					this.SendPropertyChanging();
					this._KT_TEN = value;
					this.SendPropertyChanged("KT_TEN");
					this.OnKT_TENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KT_GIATRI", DbType="NVarChar(MAX)")]
		public string KT_GIATRI
		{
			get
			{
				return this._KT_GIATRI;
			}
			set
			{
				if ((this._KT_GIATRI != value))
				{
					this.OnKT_GIATRIChanging(value);
					this.SendPropertyChanging();
					this._KT_GIATRI = value;
					this.SendPropertyChanged("KT_GIATRI");
					this.OnKT_GIATRIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TS_KYTHUAT_SP_CO_KT", Storage="_SP_CO_KTs", ThisKey="KT_ID", OtherKey="KT_ID")]
		public EntitySet<SP_CO_KT> SP_CO_KTs
		{
			get
			{
				return this._SP_CO_KTs;
			}
			set
			{
				this._SP_CO_KTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SP_CO_KTs(SP_CO_KT entity)
		{
			this.SendPropertyChanging();
			entity.TS_KYTHUAT = this;
		}
		
		private void detach_SP_CO_KTs(SP_CO_KT entity)
		{
			this.SendPropertyChanging();
			entity.TS_KYTHUAT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BAOHANH")]
	public partial class BAOHANH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BH_MA;
		
		private int _PBH_MA;
		
		private System.Nullable<System.DateTime> _BH_NGAY;
		
		private string _BH_NOIDUNG;
		
		private EntityRef<PHIEUBAOHANH> _PHIEUBAOHANH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBH_MAChanging(int value);
    partial void OnBH_MAChanged();
    partial void OnPBH_MAChanging(int value);
    partial void OnPBH_MAChanged();
    partial void OnBH_NGAYChanging(System.Nullable<System.DateTime> value);
    partial void OnBH_NGAYChanged();
    partial void OnBH_NOIDUNGChanging(string value);
    partial void OnBH_NOIDUNGChanged();
    #endregion
		
		public BAOHANH()
		{
			this._PHIEUBAOHANH = default(EntityRef<PHIEUBAOHANH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BH_MA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BH_MA
		{
			get
			{
				return this._BH_MA;
			}
			set
			{
				if ((this._BH_MA != value))
				{
					this.OnBH_MAChanging(value);
					this.SendPropertyChanging();
					this._BH_MA = value;
					this.SendPropertyChanged("BH_MA");
					this.OnBH_MAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBH_MA", DbType="Int NOT NULL")]
		public int PBH_MA
		{
			get
			{
				return this._PBH_MA;
			}
			set
			{
				if ((this._PBH_MA != value))
				{
					if (this._PHIEUBAOHANH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPBH_MAChanging(value);
					this.SendPropertyChanging();
					this._PBH_MA = value;
					this.SendPropertyChanged("PBH_MA");
					this.OnPBH_MAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BH_NGAY", DbType="DateTime")]
		public System.Nullable<System.DateTime> BH_NGAY
		{
			get
			{
				return this._BH_NGAY;
			}
			set
			{
				if ((this._BH_NGAY != value))
				{
					this.OnBH_NGAYChanging(value);
					this.SendPropertyChanging();
					this._BH_NGAY = value;
					this.SendPropertyChanged("BH_NGAY");
					this.OnBH_NGAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BH_NOIDUNG", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string BH_NOIDUNG
		{
			get
			{
				return this._BH_NOIDUNG;
			}
			set
			{
				if ((this._BH_NOIDUNG != value))
				{
					this.OnBH_NOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._BH_NOIDUNG = value;
					this.SendPropertyChanged("BH_NOIDUNG");
					this.OnBH_NOIDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUBAOHANH_BAOHANH", Storage="_PHIEUBAOHANH", ThisKey="PBH_MA", OtherKey="PBH_MA", IsForeignKey=true)]
		public PHIEUBAOHANH PHIEUBAOHANH
		{
			get
			{
				return this._PHIEUBAOHANH.Entity;
			}
			set
			{
				PHIEUBAOHANH previousValue = this._PHIEUBAOHANH.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUBAOHANH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUBAOHANH.Entity = null;
						previousValue.BAOHANHs.Remove(this);
					}
					this._PHIEUBAOHANH.Entity = value;
					if ((value != null))
					{
						value.BAOHANHs.Add(this);
						this._PBH_MA = value.PBH_MA;
					}
					else
					{
						this._PBH_MA = default(int);
					}
					this.SendPropertyChanged("PHIEUBAOHANH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BINHLUAN")]
	public partial class BINHLUAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BL_ID;
		
		private string _KH_SDT;
		
		private string _MASP;
		
		private string _BL_NOIDUNG;
		
		private System.Nullable<System.DateTime> _BL_THOIGIAN;
		
		private EntitySet<HOTRO> _HOTROs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBL_IDChanging(int value);
    partial void OnBL_IDChanged();
    partial void OnKH_SDTChanging(string value);
    partial void OnKH_SDTChanged();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnBL_NOIDUNGChanging(string value);
    partial void OnBL_NOIDUNGChanged();
    partial void OnBL_THOIGIANChanging(System.Nullable<System.DateTime> value);
    partial void OnBL_THOIGIANChanged();
    #endregion
		
		public BINHLUAN()
		{
			this._HOTROs = new EntitySet<HOTRO>(new Action<HOTRO>(this.attach_HOTROs), new Action<HOTRO>(this.detach_HOTROs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BL_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BL_ID
		{
			get
			{
				return this._BL_ID;
			}
			set
			{
				if ((this._BL_ID != value))
				{
					this.OnBL_IDChanging(value);
					this.SendPropertyChanging();
					this._BL_ID = value;
					this.SendPropertyChanged("BL_ID");
					this.OnBL_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KH_SDT", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string KH_SDT
		{
			get
			{
				return this._KH_SDT;
			}
			set
			{
				if ((this._KH_SDT != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKH_SDTChanging(value);
					this.SendPropertyChanging();
					this._KH_SDT = value;
					this.SendPropertyChanged("KH_SDT");
					this.OnKH_SDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BL_NOIDUNG", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string BL_NOIDUNG
		{
			get
			{
				return this._BL_NOIDUNG;
			}
			set
			{
				if ((this._BL_NOIDUNG != value))
				{
					this.OnBL_NOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._BL_NOIDUNG = value;
					this.SendPropertyChanged("BL_NOIDUNG");
					this.OnBL_NOIDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BL_THOIGIAN", DbType="DateTime")]
		public System.Nullable<System.DateTime> BL_THOIGIAN
		{
			get
			{
				return this._BL_THOIGIAN;
			}
			set
			{
				if ((this._BL_THOIGIAN != value))
				{
					this.OnBL_THOIGIANChanging(value);
					this.SendPropertyChanging();
					this._BL_THOIGIAN = value;
					this.SendPropertyChanged("BL_THOIGIAN");
					this.OnBL_THOIGIANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BINHLUAN_HOTRO", Storage="_HOTROs", ThisKey="BL_ID", OtherKey="BL_ID")]
		public EntitySet<HOTRO> HOTROs
		{
			get
			{
				return this._HOTROs;
			}
			set
			{
				this._HOTROs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_BINHLUAN", Storage="_KHACHHANG", ThisKey="KH_SDT", OtherKey="KH_SDT", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.BINHLUANs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.BINHLUANs.Add(this);
						this._KH_SDT = value.KH_SDT;
					}
					else
					{
						this._KH_SDT = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_BINHLUAN", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.BINHLUANs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.BINHLUANs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOTROs(HOTRO entity)
		{
			this.SendPropertyChanging();
			entity.BINHLUAN = this;
		}
		
		private void detach_HOTROs(HOTRO entity)
		{
			this.SendPropertyChanging();
			entity.BINHLUAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAPNHATGIA")]
	public partial class CAPNHATGIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASP;
		
		private System.DateTime _NGAYCAPNHAT;
		
		private System.Nullable<int> _GIABAN;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnNGAYCAPNHATChanging(System.DateTime value);
    partial void OnNGAYCAPNHATChanged();
    partial void OnGIABANChanging(System.Nullable<int> value);
    partial void OnGIABANChanged();
    #endregion
		
		public CAPNHATGIA()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYCAPNHAT", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime NGAYCAPNHAT
		{
			get
			{
				return this._NGAYCAPNHAT;
			}
			set
			{
				if ((this._NGAYCAPNHAT != value))
				{
					this.OnNGAYCAPNHATChanging(value);
					this.SendPropertyChanging();
					this._NGAYCAPNHAT = value;
					this.SendPropertyChanged("NGAYCAPNHAT");
					this.OnNGAYCAPNHATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIABAN", DbType="Int")]
		public System.Nullable<int> GIABAN
		{
			get
			{
				return this._GIABAN;
			}
			set
			{
				if ((this._GIABAN != value))
				{
					this.OnGIABANChanging(value);
					this.SendPropertyChanging();
					this._GIABAN = value;
					this.SendPropertyChanged("GIABAN");
					this.OnGIABANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CAPNHATGIA", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CAPNHATGIAs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CAPNHATGIAs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETNHAP")]
	public partial class CHITIETNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PN_MA;
		
		private string _MASP;
		
		private System.Nullable<int> _SOLUONGNHAP;
		
		private System.Nullable<decimal> _GIANHAP;
		
		private EntityRef<PHIEUNHAP> _PHIEUNHAP;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPN_MAChanging(string value);
    partial void OnPN_MAChanged();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnSOLUONGNHAPChanging(System.Nullable<int> value);
    partial void OnSOLUONGNHAPChanged();
    partial void OnGIANHAPChanging(System.Nullable<decimal> value);
    partial void OnGIANHAPChanged();
    #endregion
		
		public CHITIETNHAP()
		{
			this._PHIEUNHAP = default(EntityRef<PHIEUNHAP>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PN_MA", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PN_MA
		{
			get
			{
				return this._PN_MA;
			}
			set
			{
				if ((this._PN_MA != value))
				{
					if (this._PHIEUNHAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPN_MAChanging(value);
					this.SendPropertyChanging();
					this._PN_MA = value;
					this.SendPropertyChanged("PN_MA");
					this.OnPN_MAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGNHAP", DbType="Int")]
		public System.Nullable<int> SOLUONGNHAP
		{
			get
			{
				return this._SOLUONGNHAP;
			}
			set
			{
				if ((this._SOLUONGNHAP != value))
				{
					this.OnSOLUONGNHAPChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGNHAP = value;
					this.SendPropertyChanged("SOLUONGNHAP");
					this.OnSOLUONGNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIANHAP", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> GIANHAP
		{
			get
			{
				return this._GIANHAP;
			}
			set
			{
				if ((this._GIANHAP != value))
				{
					this.OnGIANHAPChanging(value);
					this.SendPropertyChanging();
					this._GIANHAP = value;
					this.SendPropertyChanged("GIANHAP");
					this.OnGIANHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAP_CHITIETNHAP", Storage="_PHIEUNHAP", ThisKey="PN_MA", OtherKey="PN_MA", IsForeignKey=true)]
		public PHIEUNHAP PHIEUNHAP
		{
			get
			{
				return this._PHIEUNHAP.Entity;
			}
			set
			{
				PHIEUNHAP previousValue = this._PHIEUNHAP.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUNHAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUNHAP.Entity = null;
						previousValue.CHITIETNHAPs.Remove(this);
					}
					this._PHIEUNHAP.Entity = value;
					if ((value != null))
					{
						value.CHITIETNHAPs.Add(this);
						this._PN_MA = value.PN_MA;
					}
					else
					{
						this._PN_MA = default(string);
					}
					this.SendPropertyChanged("PHIEUNHAP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETNHAP", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETNHAPs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETNHAPs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETXUAT")]
	public partial class CHITIETXUAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASP;
		
		private string _PX_MA;
		
		private System.Nullable<int> _SOLUONGXUAT;
		
		private EntityRef<PHIEUXUAT> _PHIEUXUAT;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnPX_MAChanging(string value);
    partial void OnPX_MAChanged();
    partial void OnSOLUONGXUATChanging(System.Nullable<int> value);
    partial void OnSOLUONGXUATChanged();
    #endregion
		
		public CHITIETXUAT()
		{
			this._PHIEUXUAT = default(EntityRef<PHIEUXUAT>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PX_MA", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PX_MA
		{
			get
			{
				return this._PX_MA;
			}
			set
			{
				if ((this._PX_MA != value))
				{
					if (this._PHIEUXUAT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPX_MAChanging(value);
					this.SendPropertyChanging();
					this._PX_MA = value;
					this.SendPropertyChanged("PX_MA");
					this.OnPX_MAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGXUAT", DbType="Int")]
		public System.Nullable<int> SOLUONGXUAT
		{
			get
			{
				return this._SOLUONGXUAT;
			}
			set
			{
				if ((this._SOLUONGXUAT != value))
				{
					this.OnSOLUONGXUATChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGXUAT = value;
					this.SendPropertyChanged("SOLUONGXUAT");
					this.OnSOLUONGXUATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUXUAT_CHITIETXUAT", Storage="_PHIEUXUAT", ThisKey="PX_MA", OtherKey="PX_MA", IsForeignKey=true)]
		public PHIEUXUAT PHIEUXUAT
		{
			get
			{
				return this._PHIEUXUAT.Entity;
			}
			set
			{
				PHIEUXUAT previousValue = this._PHIEUXUAT.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUXUAT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUXUAT.Entity = null;
						previousValue.CHITIETXUATs.Remove(this);
					}
					this._PHIEUXUAT.Entity = value;
					if ((value != null))
					{
						value.CHITIETXUATs.Add(this);
						this._PX_MA = value.PX_MA;
					}
					else
					{
						this._PX_MA = default(string);
					}
					this.SendPropertyChanged("PHIEUXUAT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETXUAT", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETXUATs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETXUATs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUAHANG")]
	public partial class CUAHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CH_DIACHI;
		
		private string _CH_TEN;
		
		private string _CH_SDT;
		
		private string _CH_MOTA;
		
		private string _TAIKHOAN;
		
		private string _MATKHAU;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
		private EntitySet<PHIEUBAOHANH> _PHIEUBAOHANHs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCH_DIACHIChanging(string value);
    partial void OnCH_DIACHIChanged();
    partial void OnCH_TENChanging(string value);
    partial void OnCH_TENChanged();
    partial void OnCH_SDTChanging(string value);
    partial void OnCH_SDTChanged();
    partial void OnCH_MOTAChanging(string value);
    partial void OnCH_MOTAChanged();
    partial void OnTAIKHOANChanging(string value);
    partial void OnTAIKHOANChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    #endregion
		
		public CUAHANG()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			this._PHIEUBAOHANHs = new EntitySet<PHIEUBAOHANH>(new Action<PHIEUBAOHANH>(this.attach_PHIEUBAOHANHs), new Action<PHIEUBAOHANH>(this.detach_PHIEUBAOHANHs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_DIACHI", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CH_DIACHI
		{
			get
			{
				return this._CH_DIACHI;
			}
			set
			{
				if ((this._CH_DIACHI != value))
				{
					this.OnCH_DIACHIChanging(value);
					this.SendPropertyChanging();
					this._CH_DIACHI = value;
					this.SendPropertyChanged("CH_DIACHI");
					this.OnCH_DIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_TEN", DbType="NVarChar(50)")]
		public string CH_TEN
		{
			get
			{
				return this._CH_TEN;
			}
			set
			{
				if ((this._CH_TEN != value))
				{
					this.OnCH_TENChanging(value);
					this.SendPropertyChanging();
					this._CH_TEN = value;
					this.SendPropertyChanged("CH_TEN");
					this.OnCH_TENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_SDT", DbType="VarChar(15)")]
		public string CH_SDT
		{
			get
			{
				return this._CH_SDT;
			}
			set
			{
				if ((this._CH_SDT != value))
				{
					this.OnCH_SDTChanging(value);
					this.SendPropertyChanging();
					this._CH_SDT = value;
					this.SendPropertyChanged("CH_SDT");
					this.OnCH_SDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_MOTA", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string CH_MOTA
		{
			get
			{
				return this._CH_MOTA;
			}
			set
			{
				if ((this._CH_MOTA != value))
				{
					this.OnCH_MOTAChanging(value);
					this.SendPropertyChanging();
					this._CH_MOTA = value;
					this.SendPropertyChanged("CH_MOTA");
					this.OnCH_MOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAIKHOAN", DbType="VarChar(30)")]
		public string TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN;
			}
			set
			{
				if ((this._TAIKHOAN != value))
				{
					this.OnTAIKHOANChanging(value);
					this.SendPropertyChanging();
					this._TAIKHOAN = value;
					this.SendPropertyChanged("TAIKHOAN");
					this.OnTAIKHOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="VarChar(30)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUAHANG_NHANVIEN", Storage="_NHANVIENs", ThisKey="CH_DIACHI", OtherKey="CH_DIACHI")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUAHANG_PHIEUBAOHANH", Storage="_PHIEUBAOHANHs", ThisKey="CH_DIACHI", OtherKey="CH_DIACHI")]
		public EntitySet<PHIEUBAOHANH> PHIEUBAOHANHs
		{
			get
			{
				return this._PHIEUBAOHANHs;
			}
			set
			{
				this._PHIEUBAOHANHs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CUAHANG = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CUAHANG = null;
		}
		
		private void attach_PHIEUBAOHANHs(PHIEUBAOHANH entity)
		{
			this.SendPropertyChanging();
			entity.CUAHANG = this;
		}
		
		private void detach_PHIEUBAOHANHs(PHIEUBAOHANH entity)
		{
			this.SendPropertyChanging();
			entity.CUAHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIAMGIA")]
	public partial class GIAMGIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDGT;
		
		private System.Nullable<double> _GIAMGIA1;
		
		private System.Nullable<System.DateTime> _TG_BATDAU;
		
		private System.Nullable<System.DateTime> _TG_KETTHUC;
		
		private EntitySet<KM> _KMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDGTChanging(int value);
    partial void OnIDGTChanged();
    partial void OnGIAMGIA1Changing(System.Nullable<double> value);
    partial void OnGIAMGIA1Changed();
    partial void OnTG_BATDAUChanging(System.Nullable<System.DateTime> value);
    partial void OnTG_BATDAUChanged();
    partial void OnTG_KETTHUCChanging(System.Nullable<System.DateTime> value);
    partial void OnTG_KETTHUCChanged();
    #endregion
		
		public GIAMGIA()
		{
			this._KMs = new EntitySet<KM>(new Action<KM>(this.attach_KMs), new Action<KM>(this.detach_KMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDGT
		{
			get
			{
				return this._IDGT;
			}
			set
			{
				if ((this._IDGT != value))
				{
					this.OnIDGTChanging(value);
					this.SendPropertyChanging();
					this._IDGT = value;
					this.SendPropertyChanged("IDGT");
					this.OnIDGTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="GIAMGIA", Storage="_GIAMGIA1", DbType="Float")]
		public System.Nullable<double> GIAMGIA1
		{
			get
			{
				return this._GIAMGIA1;
			}
			set
			{
				if ((this._GIAMGIA1 != value))
				{
					this.OnGIAMGIA1Changing(value);
					this.SendPropertyChanging();
					this._GIAMGIA1 = value;
					this.SendPropertyChanged("GIAMGIA1");
					this.OnGIAMGIA1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TG_BATDAU", DbType="DateTime")]
		public System.Nullable<System.DateTime> TG_BATDAU
		{
			get
			{
				return this._TG_BATDAU;
			}
			set
			{
				if ((this._TG_BATDAU != value))
				{
					this.OnTG_BATDAUChanging(value);
					this.SendPropertyChanging();
					this._TG_BATDAU = value;
					this.SendPropertyChanged("TG_BATDAU");
					this.OnTG_BATDAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TG_KETTHUC", DbType="DateTime")]
		public System.Nullable<System.DateTime> TG_KETTHUC
		{
			get
			{
				return this._TG_KETTHUC;
			}
			set
			{
				if ((this._TG_KETTHUC != value))
				{
					this.OnTG_KETTHUCChanging(value);
					this.SendPropertyChanging();
					this._TG_KETTHUC = value;
					this.SendPropertyChanged("TG_KETTHUC");
					this.OnTG_KETTHUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAMGIA_KM", Storage="_KMs", ThisKey="IDGT", OtherKey="IDGT")]
		public EntitySet<KM> KMs
		{
			get
			{
				return this._KMs;
			}
			set
			{
				this._KMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KMs(KM entity)
		{
			this.SendPropertyChanging();
			entity.GIAMGIA = this;
		}
		
		private void detach_KMs(KM entity)
		{
			this.SendPropertyChanging();
			entity.GIAMGIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HANG")]
	public partial class HANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDHANG;
		
		private string _TENHANG;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDHANGChanging(int value);
    partial void OnIDHANGChanged();
    partial void OnTENHANGChanging(string value);
    partial void OnTENHANGChanged();
    #endregion
		
		public HANG()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHANG", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDHANG
		{
			get
			{
				return this._IDHANG;
			}
			set
			{
				if ((this._IDHANG != value))
				{
					this.OnIDHANGChanging(value);
					this.SendPropertyChanging();
					this._IDHANG = value;
					this.SendPropertyChanged("IDHANG");
					this.OnIDHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHANG", DbType="NVarChar(10)")]
		public string TENHANG
		{
			get
			{
				return this._TENHANG;
			}
			set
			{
				if ((this._TENHANG != value))
				{
					this.OnTENHANGChanging(value);
					this.SendPropertyChanging();
					this._TENHANG = value;
					this.SendPropertyChanged("TENHANG");
					this.OnTENHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANG_SANPHAM", Storage="_SANPHAMs", ThisKey="IDHANG", OtherKey="IDHANG")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.HANG = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.HANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOTRO")]
	public partial class HOTRO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HT_ID;
		
		private int _NV_ID;
		
		private int _BL_ID;
		
		private string _HT_NOIDUNG;
		
		private System.Nullable<System.DateTime> _HT_THOIGIAN;
		
		private EntityRef<BINHLUAN> _BINHLUAN;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHT_IDChanging(int value);
    partial void OnHT_IDChanged();
    partial void OnNV_IDChanging(int value);
    partial void OnNV_IDChanged();
    partial void OnBL_IDChanging(int value);
    partial void OnBL_IDChanged();
    partial void OnHT_NOIDUNGChanging(string value);
    partial void OnHT_NOIDUNGChanged();
    partial void OnHT_THOIGIANChanging(System.Nullable<System.DateTime> value);
    partial void OnHT_THOIGIANChanged();
    #endregion
		
		public HOTRO()
		{
			this._BINHLUAN = default(EntityRef<BINHLUAN>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HT_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HT_ID
		{
			get
			{
				return this._HT_ID;
			}
			set
			{
				if ((this._HT_ID != value))
				{
					this.OnHT_IDChanging(value);
					this.SendPropertyChanging();
					this._HT_ID = value;
					this.SendPropertyChanged("HT_ID");
					this.OnHT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NV_ID", DbType="Int NOT NULL")]
		public int NV_ID
		{
			get
			{
				return this._NV_ID;
			}
			set
			{
				if ((this._NV_ID != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNV_IDChanging(value);
					this.SendPropertyChanging();
					this._NV_ID = value;
					this.SendPropertyChanged("NV_ID");
					this.OnNV_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BL_ID", DbType="Int NOT NULL")]
		public int BL_ID
		{
			get
			{
				return this._BL_ID;
			}
			set
			{
				if ((this._BL_ID != value))
				{
					if (this._BINHLUAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBL_IDChanging(value);
					this.SendPropertyChanging();
					this._BL_ID = value;
					this.SendPropertyChanged("BL_ID");
					this.OnBL_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HT_NOIDUNG", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string HT_NOIDUNG
		{
			get
			{
				return this._HT_NOIDUNG;
			}
			set
			{
				if ((this._HT_NOIDUNG != value))
				{
					this.OnHT_NOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._HT_NOIDUNG = value;
					this.SendPropertyChanged("HT_NOIDUNG");
					this.OnHT_NOIDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HT_THOIGIAN", DbType="DateTime")]
		public System.Nullable<System.DateTime> HT_THOIGIAN
		{
			get
			{
				return this._HT_THOIGIAN;
			}
			set
			{
				if ((this._HT_THOIGIAN != value))
				{
					this.OnHT_THOIGIANChanging(value);
					this.SendPropertyChanging();
					this._HT_THOIGIAN = value;
					this.SendPropertyChanged("HT_THOIGIAN");
					this.OnHT_THOIGIANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BINHLUAN_HOTRO", Storage="_BINHLUAN", ThisKey="BL_ID", OtherKey="BL_ID", IsForeignKey=true)]
		public BINHLUAN BINHLUAN
		{
			get
			{
				return this._BINHLUAN.Entity;
			}
			set
			{
				BINHLUAN previousValue = this._BINHLUAN.Entity;
				if (((previousValue != value) 
							|| (this._BINHLUAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BINHLUAN.Entity = null;
						previousValue.HOTROs.Remove(this);
					}
					this._BINHLUAN.Entity = value;
					if ((value != null))
					{
						value.HOTROs.Add(this);
						this._BL_ID = value.BL_ID;
					}
					else
					{
						this._BL_ID = default(int);
					}
					this.SendPropertyChanged("BINHLUAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOTRO", Storage="_NHANVIEN", ThisKey="NV_ID", OtherKey="NV_ID", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.HOTROs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.HOTROs.Add(this);
						this._NV_ID = value.NV_ID;
					}
					else
					{
						this._NV_ID = default(int);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KEMTHEO")]
	public partial class KEMTHEO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASP;
		
		private int _ID_PKK;
		
		private EntityRef<PHUKIENKEM> _PHUKIENKEM;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnID_PKKChanging(int value);
    partial void OnID_PKKChanged();
    #endregion
		
		public KEMTHEO()
		{
			this._PHUKIENKEM = default(EntityRef<PHUKIENKEM>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PKK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_PKK
		{
			get
			{
				return this._ID_PKK;
			}
			set
			{
				if ((this._ID_PKK != value))
				{
					if (this._PHUKIENKEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PKKChanging(value);
					this.SendPropertyChanging();
					this._ID_PKK = value;
					this.SendPropertyChanged("ID_PKK");
					this.OnID_PKKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHUKIENKEM_KEMTHEO", Storage="_PHUKIENKEM", ThisKey="ID_PKK", OtherKey="ID_PKK", IsForeignKey=true)]
		public PHUKIENKEM PHUKIENKEM
		{
			get
			{
				return this._PHUKIENKEM.Entity;
			}
			set
			{
				PHUKIENKEM previousValue = this._PHUKIENKEM.Entity;
				if (((previousValue != value) 
							|| (this._PHUKIENKEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHUKIENKEM.Entity = null;
						previousValue.KEMTHEOs.Remove(this);
					}
					this._PHUKIENKEM.Entity = value;
					if ((value != null))
					{
						value.KEMTHEOs.Add(this);
						this._ID_PKK = value.ID_PKK;
					}
					else
					{
						this._ID_PKK = default(int);
					}
					this.SendPropertyChanged("PHUKIENKEM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_KEMTHEO", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.KEMTHEOs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.KEMTHEOs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _KH_SDT;
		
		private string _KH_TEN;
		
		private string _KH_DIACHI;
		
		private System.Nullable<bool> _KH_GIOITINH;
		
		private EntitySet<BINHLUAN> _BINHLUANs;
		
		private EntitySet<PHIEUBAOHANH> _PHIEUBAOHANHs;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
		private EntitySet<PHIEUXUAT> _PHIEUXUATs;
		
		private EntitySet<SUACHUA> _SUACHUAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKH_SDTChanging(string value);
    partial void OnKH_SDTChanged();
    partial void OnKH_TENChanging(string value);
    partial void OnKH_TENChanged();
    partial void OnKH_DIACHIChanging(string value);
    partial void OnKH_DIACHIChanged();
    partial void OnKH_GIOITINHChanging(System.Nullable<bool> value);
    partial void OnKH_GIOITINHChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._BINHLUANs = new EntitySet<BINHLUAN>(new Action<BINHLUAN>(this.attach_BINHLUANs), new Action<BINHLUAN>(this.detach_BINHLUANs));
			this._PHIEUBAOHANHs = new EntitySet<PHIEUBAOHANH>(new Action<PHIEUBAOHANH>(this.attach_PHIEUBAOHANHs), new Action<PHIEUBAOHANH>(this.detach_PHIEUBAOHANHs));
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			this._PHIEUXUATs = new EntitySet<PHIEUXUAT>(new Action<PHIEUXUAT>(this.attach_PHIEUXUATs), new Action<PHIEUXUAT>(this.detach_PHIEUXUATs));
			this._SUACHUAs = new EntitySet<SUACHUA>(new Action<SUACHUA>(this.attach_SUACHUAs), new Action<SUACHUA>(this.detach_SUACHUAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KH_SDT", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string KH_SDT
		{
			get
			{
				return this._KH_SDT;
			}
			set
			{
				if ((this._KH_SDT != value))
				{
					this.OnKH_SDTChanging(value);
					this.SendPropertyChanging();
					this._KH_SDT = value;
					this.SendPropertyChanged("KH_SDT");
					this.OnKH_SDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KH_TEN", DbType="NVarChar(50)")]
		public string KH_TEN
		{
			get
			{
				return this._KH_TEN;
			}
			set
			{
				if ((this._KH_TEN != value))
				{
					this.OnKH_TENChanging(value);
					this.SendPropertyChanging();
					this._KH_TEN = value;
					this.SendPropertyChanged("KH_TEN");
					this.OnKH_TENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KH_DIACHI", DbType="NVarChar(100)")]
		public string KH_DIACHI
		{
			get
			{
				return this._KH_DIACHI;
			}
			set
			{
				if ((this._KH_DIACHI != value))
				{
					this.OnKH_DIACHIChanging(value);
					this.SendPropertyChanging();
					this._KH_DIACHI = value;
					this.SendPropertyChanged("KH_DIACHI");
					this.OnKH_DIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KH_GIOITINH", DbType="Bit")]
		public System.Nullable<bool> KH_GIOITINH
		{
			get
			{
				return this._KH_GIOITINH;
			}
			set
			{
				if ((this._KH_GIOITINH != value))
				{
					this.OnKH_GIOITINHChanging(value);
					this.SendPropertyChanging();
					this._KH_GIOITINH = value;
					this.SendPropertyChanged("KH_GIOITINH");
					this.OnKH_GIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_BINHLUAN", Storage="_BINHLUANs", ThisKey="KH_SDT", OtherKey="KH_SDT")]
		public EntitySet<BINHLUAN> BINHLUANs
		{
			get
			{
				return this._BINHLUANs;
			}
			set
			{
				this._BINHLUANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_PHIEUBAOHANH", Storage="_PHIEUBAOHANHs", ThisKey="KH_SDT", OtherKey="KH_SDT")]
		public EntitySet<PHIEUBAOHANH> PHIEUBAOHANHs
		{
			get
			{
				return this._PHIEUBAOHANHs;
			}
			set
			{
				this._PHIEUBAOHANHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_PHIEUNHAP", Storage="_PHIEUNHAPs", ThisKey="KH_SDT", OtherKey="KH_SDT")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_PHIEUXUAT", Storage="_PHIEUXUATs", ThisKey="KH_SDT", OtherKey="KH_SDT")]
		public EntitySet<PHIEUXUAT> PHIEUXUATs
		{
			get
			{
				return this._PHIEUXUATs;
			}
			set
			{
				this._PHIEUXUATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_SUACHUA", Storage="_SUACHUAs", ThisKey="KH_SDT", OtherKey="KH_SDT")]
		public EntitySet<SUACHUA> SUACHUAs
		{
			get
			{
				return this._SUACHUAs;
			}
			set
			{
				this._SUACHUAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_PHIEUBAOHANHs(PHIEUBAOHANH entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_PHIEUBAOHANHs(PHIEUBAOHANH entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_PHIEUXUATs(PHIEUXUAT entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_PHIEUXUATs(PHIEUXUAT entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_SUACHUAs(SUACHUA entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_SUACHUAs(SUACHUA entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KM")]
	public partial class KM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASP;
		
		private int _IDGT;
		
		private EntityRef<GIAMGIA> _GIAMGIA;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnIDGTChanging(int value);
    partial void OnIDGTChanged();
    #endregion
		
		public KM()
		{
			this._GIAMGIA = default(EntityRef<GIAMGIA>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDGT
		{
			get
			{
				return this._IDGT;
			}
			set
			{
				if ((this._IDGT != value))
				{
					if (this._GIAMGIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDGTChanging(value);
					this.SendPropertyChanging();
					this._IDGT = value;
					this.SendPropertyChanged("IDGT");
					this.OnIDGTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIAMGIA_KM", Storage="_GIAMGIA", ThisKey="IDGT", OtherKey="IDGT", IsForeignKey=true)]
		public GIAMGIA GIAMGIA
		{
			get
			{
				return this._GIAMGIA.Entity;
			}
			set
			{
				GIAMGIA previousValue = this._GIAMGIA.Entity;
				if (((previousValue != value) 
							|| (this._GIAMGIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIAMGIA.Entity = null;
						previousValue.KMs.Remove(this);
					}
					this._GIAMGIA.Entity = value;
					if ((value != null))
					{
						value.KMs.Add(this);
						this._IDGT = value.IDGT;
					}
					else
					{
						this._IDGT = default(int);
					}
					this.SendPropertyChanged("GIAMGIA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_KM", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.KMs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.KMs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAISANPHAM")]
	public partial class LOAISANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LSP_MA;
		
		private string _LSP_TENLOAI;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLSP_MAChanging(int value);
    partial void OnLSP_MAChanged();
    partial void OnLSP_TENLOAIChanging(string value);
    partial void OnLSP_TENLOAIChanged();
    #endregion
		
		public LOAISANPHAM()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LSP_MA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LSP_MA
		{
			get
			{
				return this._LSP_MA;
			}
			set
			{
				if ((this._LSP_MA != value))
				{
					this.OnLSP_MAChanging(value);
					this.SendPropertyChanging();
					this._LSP_MA = value;
					this.SendPropertyChanged("LSP_MA");
					this.OnLSP_MAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LSP_TENLOAI", DbType="NVarChar(20)")]
		public string LSP_TENLOAI
		{
			get
			{
				return this._LSP_TENLOAI;
			}
			set
			{
				if ((this._LSP_TENLOAI != value))
				{
					this.OnLSP_TENLOAIChanging(value);
					this.SendPropertyChanging();
					this._LSP_TENLOAI = value;
					this.SendPropertyChanged("LSP_TENLOAI");
					this.OnLSP_TENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISANPHAM_SANPHAM", Storage="_SANPHAMs", ThisKey="LSP_MA", OtherKey="LSP_MA")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISANPHAM = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NV_ID;
		
		private string _CH_DIACHI;
		
		private string _NV_TEN;
		
		private string _NV_DIACHI;
		
		private System.Nullable<bool> _NV_GIOITINH;
		
		private System.Nullable<System.DateTime> _NV_NGAYSINH;
		
		private string _NV_SDT;
		
		private System.Nullable<bool> _NV_DELETE;
		
		private EntitySet<HOTRO> _HOTROs;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
		private EntitySet<PHIEUXUAT> _PHIEUXUATs;
		
		private EntityRef<CUAHANG> _CUAHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNV_IDChanging(int value);
    partial void OnNV_IDChanged();
    partial void OnCH_DIACHIChanging(string value);
    partial void OnCH_DIACHIChanged();
    partial void OnNV_TENChanging(string value);
    partial void OnNV_TENChanged();
    partial void OnNV_DIACHIChanging(string value);
    partial void OnNV_DIACHIChanged();
    partial void OnNV_GIOITINHChanging(System.Nullable<bool> value);
    partial void OnNV_GIOITINHChanged();
    partial void OnNV_NGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNV_NGAYSINHChanged();
    partial void OnNV_SDTChanging(string value);
    partial void OnNV_SDTChanged();
    partial void OnNV_DELETEChanging(System.Nullable<bool> value);
    partial void OnNV_DELETEChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._HOTROs = new EntitySet<HOTRO>(new Action<HOTRO>(this.attach_HOTROs), new Action<HOTRO>(this.detach_HOTROs));
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			this._PHIEUXUATs = new EntitySet<PHIEUXUAT>(new Action<PHIEUXUAT>(this.attach_PHIEUXUATs), new Action<PHIEUXUAT>(this.detach_PHIEUXUATs));
			this._CUAHANG = default(EntityRef<CUAHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NV_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NV_ID
		{
			get
			{
				return this._NV_ID;
			}
			set
			{
				if ((this._NV_ID != value))
				{
					this.OnNV_IDChanging(value);
					this.SendPropertyChanging();
					this._NV_ID = value;
					this.SendPropertyChanged("NV_ID");
					this.OnNV_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_DIACHI", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CH_DIACHI
		{
			get
			{
				return this._CH_DIACHI;
			}
			set
			{
				if ((this._CH_DIACHI != value))
				{
					if (this._CUAHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCH_DIACHIChanging(value);
					this.SendPropertyChanging();
					this._CH_DIACHI = value;
					this.SendPropertyChanged("CH_DIACHI");
					this.OnCH_DIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NV_TEN", DbType="NVarChar(50)")]
		public string NV_TEN
		{
			get
			{
				return this._NV_TEN;
			}
			set
			{
				if ((this._NV_TEN != value))
				{
					this.OnNV_TENChanging(value);
					this.SendPropertyChanging();
					this._NV_TEN = value;
					this.SendPropertyChanged("NV_TEN");
					this.OnNV_TENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NV_DIACHI", DbType="NVarChar(100)")]
		public string NV_DIACHI
		{
			get
			{
				return this._NV_DIACHI;
			}
			set
			{
				if ((this._NV_DIACHI != value))
				{
					this.OnNV_DIACHIChanging(value);
					this.SendPropertyChanging();
					this._NV_DIACHI = value;
					this.SendPropertyChanged("NV_DIACHI");
					this.OnNV_DIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NV_GIOITINH", DbType="Bit")]
		public System.Nullable<bool> NV_GIOITINH
		{
			get
			{
				return this._NV_GIOITINH;
			}
			set
			{
				if ((this._NV_GIOITINH != value))
				{
					this.OnNV_GIOITINHChanging(value);
					this.SendPropertyChanging();
					this._NV_GIOITINH = value;
					this.SendPropertyChanged("NV_GIOITINH");
					this.OnNV_GIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NV_NGAYSINH", DbType="DateTime")]
		public System.Nullable<System.DateTime> NV_NGAYSINH
		{
			get
			{
				return this._NV_NGAYSINH;
			}
			set
			{
				if ((this._NV_NGAYSINH != value))
				{
					this.OnNV_NGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NV_NGAYSINH = value;
					this.SendPropertyChanged("NV_NGAYSINH");
					this.OnNV_NGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NV_SDT", DbType="VarChar(15)")]
		public string NV_SDT
		{
			get
			{
				return this._NV_SDT;
			}
			set
			{
				if ((this._NV_SDT != value))
				{
					this.OnNV_SDTChanging(value);
					this.SendPropertyChanging();
					this._NV_SDT = value;
					this.SendPropertyChanged("NV_SDT");
					this.OnNV_SDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NV_DELETE", DbType="Bit")]
		public System.Nullable<bool> NV_DELETE
		{
			get
			{
				return this._NV_DELETE;
			}
			set
			{
				if ((this._NV_DELETE != value))
				{
					this.OnNV_DELETEChanging(value);
					this.SendPropertyChanging();
					this._NV_DELETE = value;
					this.SendPropertyChanged("NV_DELETE");
					this.OnNV_DELETEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOTRO", Storage="_HOTROs", ThisKey="NV_ID", OtherKey="NV_ID")]
		public EntitySet<HOTRO> HOTROs
		{
			get
			{
				return this._HOTROs;
			}
			set
			{
				this._HOTROs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUNHAP", Storage="_PHIEUNHAPs", ThisKey="NV_ID", OtherKey="NV_ID")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUXUAT", Storage="_PHIEUXUATs", ThisKey="NV_ID", OtherKey="NV_ID")]
		public EntitySet<PHIEUXUAT> PHIEUXUATs
		{
			get
			{
				return this._PHIEUXUATs;
			}
			set
			{
				this._PHIEUXUATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUAHANG_NHANVIEN", Storage="_CUAHANG", ThisKey="CH_DIACHI", OtherKey="CH_DIACHI", IsForeignKey=true)]
		public CUAHANG CUAHANG
		{
			get
			{
				return this._CUAHANG.Entity;
			}
			set
			{
				CUAHANG previousValue = this._CUAHANG.Entity;
				if (((previousValue != value) 
							|| (this._CUAHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUAHANG.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._CUAHANG.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._CH_DIACHI = value.CH_DIACHI;
					}
					else
					{
						this._CH_DIACHI = default(string);
					}
					this.SendPropertyChanged("CUAHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOTROs(HOTRO entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_HOTROs(HOTRO entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_PHIEUXUATs(PHIEUXUAT entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEUXUATs(PHIEUXUAT entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHAPHANPHOI")]
	public partial class NHAPHANPHOI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NPP_MA;
		
		private string _NPP_TEN;
		
		private string _NPP_SDT;
		
		private string _NPP_DIACHI;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNPP_MAChanging(string value);
    partial void OnNPP_MAChanged();
    partial void OnNPP_TENChanging(string value);
    partial void OnNPP_TENChanged();
    partial void OnNPP_SDTChanging(string value);
    partial void OnNPP_SDTChanged();
    partial void OnNPP_DIACHIChanging(string value);
    partial void OnNPP_DIACHIChanged();
    #endregion
		
		public NHAPHANPHOI()
		{
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NPP_MA", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NPP_MA
		{
			get
			{
				return this._NPP_MA;
			}
			set
			{
				if ((this._NPP_MA != value))
				{
					this.OnNPP_MAChanging(value);
					this.SendPropertyChanging();
					this._NPP_MA = value;
					this.SendPropertyChanged("NPP_MA");
					this.OnNPP_MAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NPP_TEN", DbType="NVarChar(50)")]
		public string NPP_TEN
		{
			get
			{
				return this._NPP_TEN;
			}
			set
			{
				if ((this._NPP_TEN != value))
				{
					this.OnNPP_TENChanging(value);
					this.SendPropertyChanging();
					this._NPP_TEN = value;
					this.SendPropertyChanged("NPP_TEN");
					this.OnNPP_TENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NPP_SDT", DbType="VarChar(15)")]
		public string NPP_SDT
		{
			get
			{
				return this._NPP_SDT;
			}
			set
			{
				if ((this._NPP_SDT != value))
				{
					this.OnNPP_SDTChanging(value);
					this.SendPropertyChanging();
					this._NPP_SDT = value;
					this.SendPropertyChanged("NPP_SDT");
					this.OnNPP_SDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NPP_DIACHI", DbType="NVarChar(100)")]
		public string NPP_DIACHI
		{
			get
			{
				return this._NPP_DIACHI;
			}
			set
			{
				if ((this._NPP_DIACHI != value))
				{
					this.OnNPP_DIACHIChanging(value);
					this.SendPropertyChanging();
					this._NPP_DIACHI = value;
					this.SendPropertyChanged("NPP_DIACHI");
					this.OnNPP_DIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAPHANPHOI_PHIEUNHAP", Storage="_PHIEUNHAPs", ThisKey="NPP_MA", OtherKey="NPP_MA")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHAPHANPHOI = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHAPHANPHOI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUBAOHANH")]
	public partial class PHIEUBAOHANH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PBH_MA;
		
		private string _MASP;
		
		private string _KH_SDT;
		
		private string _CH_DIACHI;
		
		private System.Nullable<double> _PBH_THOIGIANBH;
		
		private System.Nullable<System.DateTime> _PBH_NGAYBD;
		
		private string _PBH_NOIDUNG;
		
		private EntitySet<BAOHANH> _BAOHANHs;
		
		private EntityRef<CUAHANG> _CUAHANG;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPBH_MAChanging(int value);
    partial void OnPBH_MAChanged();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnKH_SDTChanging(string value);
    partial void OnKH_SDTChanged();
    partial void OnCH_DIACHIChanging(string value);
    partial void OnCH_DIACHIChanged();
    partial void OnPBH_THOIGIANBHChanging(System.Nullable<double> value);
    partial void OnPBH_THOIGIANBHChanged();
    partial void OnPBH_NGAYBDChanging(System.Nullable<System.DateTime> value);
    partial void OnPBH_NGAYBDChanged();
    partial void OnPBH_NOIDUNGChanging(string value);
    partial void OnPBH_NOIDUNGChanged();
    #endregion
		
		public PHIEUBAOHANH()
		{
			this._BAOHANHs = new EntitySet<BAOHANH>(new Action<BAOHANH>(this.attach_BAOHANHs), new Action<BAOHANH>(this.detach_BAOHANHs));
			this._CUAHANG = default(EntityRef<CUAHANG>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBH_MA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PBH_MA
		{
			get
			{
				return this._PBH_MA;
			}
			set
			{
				if ((this._PBH_MA != value))
				{
					this.OnPBH_MAChanging(value);
					this.SendPropertyChanging();
					this._PBH_MA = value;
					this.SendPropertyChanged("PBH_MA");
					this.OnPBH_MAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KH_SDT", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string KH_SDT
		{
			get
			{
				return this._KH_SDT;
			}
			set
			{
				if ((this._KH_SDT != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKH_SDTChanging(value);
					this.SendPropertyChanging();
					this._KH_SDT = value;
					this.SendPropertyChanged("KH_SDT");
					this.OnKH_SDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CH_DIACHI", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CH_DIACHI
		{
			get
			{
				return this._CH_DIACHI;
			}
			set
			{
				if ((this._CH_DIACHI != value))
				{
					if (this._CUAHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCH_DIACHIChanging(value);
					this.SendPropertyChanging();
					this._CH_DIACHI = value;
					this.SendPropertyChanged("CH_DIACHI");
					this.OnCH_DIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBH_THOIGIANBH", DbType="Float")]
		public System.Nullable<double> PBH_THOIGIANBH
		{
			get
			{
				return this._PBH_THOIGIANBH;
			}
			set
			{
				if ((this._PBH_THOIGIANBH != value))
				{
					this.OnPBH_THOIGIANBHChanging(value);
					this.SendPropertyChanging();
					this._PBH_THOIGIANBH = value;
					this.SendPropertyChanged("PBH_THOIGIANBH");
					this.OnPBH_THOIGIANBHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBH_NGAYBD", DbType="DateTime")]
		public System.Nullable<System.DateTime> PBH_NGAYBD
		{
			get
			{
				return this._PBH_NGAYBD;
			}
			set
			{
				if ((this._PBH_NGAYBD != value))
				{
					this.OnPBH_NGAYBDChanging(value);
					this.SendPropertyChanging();
					this._PBH_NGAYBD = value;
					this.SendPropertyChanged("PBH_NGAYBD");
					this.OnPBH_NGAYBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBH_NOIDUNG", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string PBH_NOIDUNG
		{
			get
			{
				return this._PBH_NOIDUNG;
			}
			set
			{
				if ((this._PBH_NOIDUNG != value))
				{
					this.OnPBH_NOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._PBH_NOIDUNG = value;
					this.SendPropertyChanged("PBH_NOIDUNG");
					this.OnPBH_NOIDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUBAOHANH_BAOHANH", Storage="_BAOHANHs", ThisKey="PBH_MA", OtherKey="PBH_MA")]
		public EntitySet<BAOHANH> BAOHANHs
		{
			get
			{
				return this._BAOHANHs;
			}
			set
			{
				this._BAOHANHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUAHANG_PHIEUBAOHANH", Storage="_CUAHANG", ThisKey="CH_DIACHI", OtherKey="CH_DIACHI", IsForeignKey=true)]
		public CUAHANG CUAHANG
		{
			get
			{
				return this._CUAHANG.Entity;
			}
			set
			{
				CUAHANG previousValue = this._CUAHANG.Entity;
				if (((previousValue != value) 
							|| (this._CUAHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUAHANG.Entity = null;
						previousValue.PHIEUBAOHANHs.Remove(this);
					}
					this._CUAHANG.Entity = value;
					if ((value != null))
					{
						value.PHIEUBAOHANHs.Add(this);
						this._CH_DIACHI = value.CH_DIACHI;
					}
					else
					{
						this._CH_DIACHI = default(string);
					}
					this.SendPropertyChanged("CUAHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_PHIEUBAOHANH", Storage="_KHACHHANG", ThisKey="KH_SDT", OtherKey="KH_SDT", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.PHIEUBAOHANHs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.PHIEUBAOHANHs.Add(this);
						this._KH_SDT = value.KH_SDT;
					}
					else
					{
						this._KH_SDT = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_PHIEUBAOHANH", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.PHIEUBAOHANHs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.PHIEUBAOHANHs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BAOHANHs(BAOHANH entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUBAOHANH = this;
		}
		
		private void detach_BAOHANHs(BAOHANH entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUBAOHANH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUNHAP")]
	public partial class PHIEUNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PN_MA;
		
		private string _KH_SDT;
		
		private string _NPP_MA;
		
		private int _NV_ID;
		
		private System.Nullable<System.DateTime> _PN_NGAYNHAP;
		
		private System.Nullable<decimal> _PN_TONGTIEN;
		
		private System.Nullable<bool> _PN_TINHTRANG;
		
		private EntitySet<CHITIETNHAP> _CHITIETNHAPs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<NHAPHANPHOI> _NHAPHANPHOI;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPN_MAChanging(string value);
    partial void OnPN_MAChanged();
    partial void OnKH_SDTChanging(string value);
    partial void OnKH_SDTChanged();
    partial void OnNPP_MAChanging(string value);
    partial void OnNPP_MAChanged();
    partial void OnNV_IDChanging(int value);
    partial void OnNV_IDChanged();
    partial void OnPN_NGAYNHAPChanging(System.Nullable<System.DateTime> value);
    partial void OnPN_NGAYNHAPChanged();
    partial void OnPN_TONGTIENChanging(System.Nullable<decimal> value);
    partial void OnPN_TONGTIENChanged();
    partial void OnPN_TINHTRANGChanging(System.Nullable<bool> value);
    partial void OnPN_TINHTRANGChanged();
    #endregion
		
		public PHIEUNHAP()
		{
			this._CHITIETNHAPs = new EntitySet<CHITIETNHAP>(new Action<CHITIETNHAP>(this.attach_CHITIETNHAPs), new Action<CHITIETNHAP>(this.detach_CHITIETNHAPs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._NHAPHANPHOI = default(EntityRef<NHAPHANPHOI>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PN_MA", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PN_MA
		{
			get
			{
				return this._PN_MA;
			}
			set
			{
				if ((this._PN_MA != value))
				{
					this.OnPN_MAChanging(value);
					this.SendPropertyChanging();
					this._PN_MA = value;
					this.SendPropertyChanged("PN_MA");
					this.OnPN_MAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KH_SDT", DbType="VarChar(15)")]
		public string KH_SDT
		{
			get
			{
				return this._KH_SDT;
			}
			set
			{
				if ((this._KH_SDT != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKH_SDTChanging(value);
					this.SendPropertyChanging();
					this._KH_SDT = value;
					this.SendPropertyChanged("KH_SDT");
					this.OnKH_SDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NPP_MA", DbType="VarChar(10)")]
		public string NPP_MA
		{
			get
			{
				return this._NPP_MA;
			}
			set
			{
				if ((this._NPP_MA != value))
				{
					if (this._NHAPHANPHOI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNPP_MAChanging(value);
					this.SendPropertyChanging();
					this._NPP_MA = value;
					this.SendPropertyChanged("NPP_MA");
					this.OnNPP_MAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NV_ID", DbType="Int NOT NULL")]
		public int NV_ID
		{
			get
			{
				return this._NV_ID;
			}
			set
			{
				if ((this._NV_ID != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNV_IDChanging(value);
					this.SendPropertyChanging();
					this._NV_ID = value;
					this.SendPropertyChanged("NV_ID");
					this.OnNV_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PN_NGAYNHAP", DbType="DateTime")]
		public System.Nullable<System.DateTime> PN_NGAYNHAP
		{
			get
			{
				return this._PN_NGAYNHAP;
			}
			set
			{
				if ((this._PN_NGAYNHAP != value))
				{
					this.OnPN_NGAYNHAPChanging(value);
					this.SendPropertyChanging();
					this._PN_NGAYNHAP = value;
					this.SendPropertyChanged("PN_NGAYNHAP");
					this.OnPN_NGAYNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PN_TONGTIEN", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> PN_TONGTIEN
		{
			get
			{
				return this._PN_TONGTIEN;
			}
			set
			{
				if ((this._PN_TONGTIEN != value))
				{
					this.OnPN_TONGTIENChanging(value);
					this.SendPropertyChanging();
					this._PN_TONGTIEN = value;
					this.SendPropertyChanged("PN_TONGTIEN");
					this.OnPN_TONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PN_TINHTRANG", DbType="Bit")]
		public System.Nullable<bool> PN_TINHTRANG
		{
			get
			{
				return this._PN_TINHTRANG;
			}
			set
			{
				if ((this._PN_TINHTRANG != value))
				{
					this.OnPN_TINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._PN_TINHTRANG = value;
					this.SendPropertyChanged("PN_TINHTRANG");
					this.OnPN_TINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAP_CHITIETNHAP", Storage="_CHITIETNHAPs", ThisKey="PN_MA", OtherKey="PN_MA")]
		public EntitySet<CHITIETNHAP> CHITIETNHAPs
		{
			get
			{
				return this._CHITIETNHAPs;
			}
			set
			{
				this._CHITIETNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_PHIEUNHAP", Storage="_KHACHHANG", ThisKey="KH_SDT", OtherKey="KH_SDT", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._KH_SDT = value.KH_SDT;
					}
					else
					{
						this._KH_SDT = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAPHANPHOI_PHIEUNHAP", Storage="_NHAPHANPHOI", ThisKey="NPP_MA", OtherKey="NPP_MA", IsForeignKey=true)]
		public NHAPHANPHOI NHAPHANPHOI
		{
			get
			{
				return this._NHAPHANPHOI.Entity;
			}
			set
			{
				NHAPHANPHOI previousValue = this._NHAPHANPHOI.Entity;
				if (((previousValue != value) 
							|| (this._NHAPHANPHOI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHAPHANPHOI.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._NHAPHANPHOI.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._NPP_MA = value.NPP_MA;
					}
					else
					{
						this._NPP_MA = default(string);
					}
					this.SendPropertyChanged("NHAPHANPHOI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUNHAP", Storage="_NHANVIEN", ThisKey="NV_ID", OtherKey="NV_ID", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._NV_ID = value.NV_ID;
					}
					else
					{
						this._NV_ID = default(int);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETNHAPs(CHITIETNHAP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAP = this;
		}
		
		private void detach_CHITIETNHAPs(CHITIETNHAP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUXUAT")]
	public partial class PHIEUXUAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PX_MA;
		
		private string _KH_SDT;
		
		private System.Nullable<int> _NV_ID;
		
		private System.Nullable<System.DateTime> _PX_NGAYXUAT;
		
		private System.Nullable<int> _PX_TONGTIEN;
		
		private System.Nullable<bool> _PX_TINHTRANG;
		
		private EntitySet<CHITIETXUAT> _CHITIETXUATs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPX_MAChanging(string value);
    partial void OnPX_MAChanged();
    partial void OnKH_SDTChanging(string value);
    partial void OnKH_SDTChanged();
    partial void OnNV_IDChanging(System.Nullable<int> value);
    partial void OnNV_IDChanged();
    partial void OnPX_NGAYXUATChanging(System.Nullable<System.DateTime> value);
    partial void OnPX_NGAYXUATChanged();
    partial void OnPX_TONGTIENChanging(System.Nullable<int> value);
    partial void OnPX_TONGTIENChanged();
    partial void OnPX_TINHTRANGChanging(System.Nullable<bool> value);
    partial void OnPX_TINHTRANGChanged();
    #endregion
		
		public PHIEUXUAT()
		{
			this._CHITIETXUATs = new EntitySet<CHITIETXUAT>(new Action<CHITIETXUAT>(this.attach_CHITIETXUATs), new Action<CHITIETXUAT>(this.detach_CHITIETXUATs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PX_MA", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PX_MA
		{
			get
			{
				return this._PX_MA;
			}
			set
			{
				if ((this._PX_MA != value))
				{
					this.OnPX_MAChanging(value);
					this.SendPropertyChanging();
					this._PX_MA = value;
					this.SendPropertyChanged("PX_MA");
					this.OnPX_MAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KH_SDT", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string KH_SDT
		{
			get
			{
				return this._KH_SDT;
			}
			set
			{
				if ((this._KH_SDT != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKH_SDTChanging(value);
					this.SendPropertyChanging();
					this._KH_SDT = value;
					this.SendPropertyChanged("KH_SDT");
					this.OnKH_SDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NV_ID", DbType="Int")]
		public System.Nullable<int> NV_ID
		{
			get
			{
				return this._NV_ID;
			}
			set
			{
				if ((this._NV_ID != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNV_IDChanging(value);
					this.SendPropertyChanging();
					this._NV_ID = value;
					this.SendPropertyChanged("NV_ID");
					this.OnNV_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PX_NGAYXUAT", DbType="DateTime")]
		public System.Nullable<System.DateTime> PX_NGAYXUAT
		{
			get
			{
				return this._PX_NGAYXUAT;
			}
			set
			{
				if ((this._PX_NGAYXUAT != value))
				{
					this.OnPX_NGAYXUATChanging(value);
					this.SendPropertyChanging();
					this._PX_NGAYXUAT = value;
					this.SendPropertyChanged("PX_NGAYXUAT");
					this.OnPX_NGAYXUATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PX_TONGTIEN", DbType="Int")]
		public System.Nullable<int> PX_TONGTIEN
		{
			get
			{
				return this._PX_TONGTIEN;
			}
			set
			{
				if ((this._PX_TONGTIEN != value))
				{
					this.OnPX_TONGTIENChanging(value);
					this.SendPropertyChanging();
					this._PX_TONGTIEN = value;
					this.SendPropertyChanged("PX_TONGTIEN");
					this.OnPX_TONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PX_TINHTRANG", DbType="Bit")]
		public System.Nullable<bool> PX_TINHTRANG
		{
			get
			{
				return this._PX_TINHTRANG;
			}
			set
			{
				if ((this._PX_TINHTRANG != value))
				{
					this.OnPX_TINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._PX_TINHTRANG = value;
					this.SendPropertyChanged("PX_TINHTRANG");
					this.OnPX_TINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUXUAT_CHITIETXUAT", Storage="_CHITIETXUATs", ThisKey="PX_MA", OtherKey="PX_MA")]
		public EntitySet<CHITIETXUAT> CHITIETXUATs
		{
			get
			{
				return this._CHITIETXUATs;
			}
			set
			{
				this._CHITIETXUATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_PHIEUXUAT", Storage="_KHACHHANG", ThisKey="KH_SDT", OtherKey="KH_SDT", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.PHIEUXUATs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.PHIEUXUATs.Add(this);
						this._KH_SDT = value.KH_SDT;
					}
					else
					{
						this._KH_SDT = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUXUAT", Storage="_NHANVIEN", ThisKey="NV_ID", OtherKey="NV_ID", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEUXUATs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUXUATs.Add(this);
						this._NV_ID = value.NV_ID;
					}
					else
					{
						this._NV_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETXUATs(CHITIETXUAT entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUXUAT = this;
		}
		
		private void detach_CHITIETXUATs(CHITIETXUAT entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUXUAT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHUKIENKEM")]
	public partial class PHUKIENKEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PKK;
		
		private string _TENPKK;
		
		private EntitySet<KEMTHEO> _KEMTHEOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PKKChanging(int value);
    partial void OnID_PKKChanged();
    partial void OnTENPKKChanging(string value);
    partial void OnTENPKKChanged();
    #endregion
		
		public PHUKIENKEM()
		{
			this._KEMTHEOs = new EntitySet<KEMTHEO>(new Action<KEMTHEO>(this.attach_KEMTHEOs), new Action<KEMTHEO>(this.detach_KEMTHEOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PKK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_PKK
		{
			get
			{
				return this._ID_PKK;
			}
			set
			{
				if ((this._ID_PKK != value))
				{
					this.OnID_PKKChanging(value);
					this.SendPropertyChanging();
					this._ID_PKK = value;
					this.SendPropertyChanged("ID_PKK");
					this.OnID_PKKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENPKK", DbType="NVarChar(100)")]
		public string TENPKK
		{
			get
			{
				return this._TENPKK;
			}
			set
			{
				if ((this._TENPKK != value))
				{
					this.OnTENPKKChanging(value);
					this.SendPropertyChanging();
					this._TENPKK = value;
					this.SendPropertyChanged("TENPKK");
					this.OnTENPKKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHUKIENKEM_KEMTHEO", Storage="_KEMTHEOs", ThisKey="ID_PKK", OtherKey="ID_PKK")]
		public EntitySet<KEMTHEO> KEMTHEOs
		{
			get
			{
				return this._KEMTHEOs;
			}
			set
			{
				this._KEMTHEOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KEMTHEOs(KEMTHEO entity)
		{
			this.SendPropertyChanging();
			entity.PHUKIENKEM = this;
		}
		
		private void detach_KEMTHEOs(KEMTHEO entity)
		{
			this.SendPropertyChanging();
			entity.PHUKIENKEM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASP;
		
		private int _IDHANG;
		
		private int _LSP_MA;
		
		private string _TENSP;
		
		private System.Nullable<int> _GIANHAPSP;
		
		private System.Nullable<bool> _SP_TINHTRANG;
		
		private System.Nullable<int> _SOLUONGSP;
		
		private string _SERI;
		
		private string _DUNGLUONG;
		
		private EntitySet<ANHSP> _ANHSPs;
		
		private EntitySet<BINHLUAN> _BINHLUANs;
		
		private EntitySet<CAPNHATGIA> _CAPNHATGIAs;
		
		private EntitySet<CHITIETNHAP> _CHITIETNHAPs;
		
		private EntitySet<CHITIETXUAT> _CHITIETXUATs;
		
		private EntitySet<KEMTHEO> _KEMTHEOs;
		
		private EntitySet<KM> _KMs;
		
		private EntitySet<PHIEUBAOHANH> _PHIEUBAOHANHs;
		
		private EntitySet<SP_CO_KT> _SP_CO_KTs;
		
		private EntitySet<SUACHUA> _SUACHUAs;
		
		private EntityRef<LOAISANPHAM> _LOAISANPHAM;
		
		private EntityRef<HANG> _HANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnIDHANGChanging(int value);
    partial void OnIDHANGChanged();
    partial void OnLSP_MAChanging(int value);
    partial void OnLSP_MAChanged();
    partial void OnTENSPChanging(string value);
    partial void OnTENSPChanged();
    partial void OnGIANHAPSPChanging(System.Nullable<int> value);
    partial void OnGIANHAPSPChanged();
    partial void OnSP_TINHTRANGChanging(System.Nullable<bool> value);
    partial void OnSP_TINHTRANGChanged();
    partial void OnSOLUONGSPChanging(System.Nullable<int> value);
    partial void OnSOLUONGSPChanged();
    partial void OnSERIChanging(string value);
    partial void OnSERIChanged();
    partial void OnDUNGLUONGChanging(string value);
    partial void OnDUNGLUONGChanged();
    #endregion
		
		public SANPHAM()
		{
			this._ANHSPs = new EntitySet<ANHSP>(new Action<ANHSP>(this.attach_ANHSPs), new Action<ANHSP>(this.detach_ANHSPs));
			this._BINHLUANs = new EntitySet<BINHLUAN>(new Action<BINHLUAN>(this.attach_BINHLUANs), new Action<BINHLUAN>(this.detach_BINHLUANs));
			this._CAPNHATGIAs = new EntitySet<CAPNHATGIA>(new Action<CAPNHATGIA>(this.attach_CAPNHATGIAs), new Action<CAPNHATGIA>(this.detach_CAPNHATGIAs));
			this._CHITIETNHAPs = new EntitySet<CHITIETNHAP>(new Action<CHITIETNHAP>(this.attach_CHITIETNHAPs), new Action<CHITIETNHAP>(this.detach_CHITIETNHAPs));
			this._CHITIETXUATs = new EntitySet<CHITIETXUAT>(new Action<CHITIETXUAT>(this.attach_CHITIETXUATs), new Action<CHITIETXUAT>(this.detach_CHITIETXUATs));
			this._KEMTHEOs = new EntitySet<KEMTHEO>(new Action<KEMTHEO>(this.attach_KEMTHEOs), new Action<KEMTHEO>(this.detach_KEMTHEOs));
			this._KMs = new EntitySet<KM>(new Action<KM>(this.attach_KMs), new Action<KM>(this.detach_KMs));
			this._PHIEUBAOHANHs = new EntitySet<PHIEUBAOHANH>(new Action<PHIEUBAOHANH>(this.attach_PHIEUBAOHANHs), new Action<PHIEUBAOHANH>(this.detach_PHIEUBAOHANHs));
			this._SP_CO_KTs = new EntitySet<SP_CO_KT>(new Action<SP_CO_KT>(this.attach_SP_CO_KTs), new Action<SP_CO_KT>(this.detach_SP_CO_KTs));
			this._SUACHUAs = new EntitySet<SUACHUA>(new Action<SUACHUA>(this.attach_SUACHUAs), new Action<SUACHUA>(this.detach_SUACHUAs));
			this._LOAISANPHAM = default(EntityRef<LOAISANPHAM>);
			this._HANG = default(EntityRef<HANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHANG", DbType="Int NOT NULL")]
		public int IDHANG
		{
			get
			{
				return this._IDHANG;
			}
			set
			{
				if ((this._IDHANG != value))
				{
					if (this._HANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDHANGChanging(value);
					this.SendPropertyChanging();
					this._IDHANG = value;
					this.SendPropertyChanged("IDHANG");
					this.OnIDHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LSP_MA", DbType="Int NOT NULL")]
		public int LSP_MA
		{
			get
			{
				return this._LSP_MA;
			}
			set
			{
				if ((this._LSP_MA != value))
				{
					if (this._LOAISANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLSP_MAChanging(value);
					this.SendPropertyChanging();
					this._LSP_MA = value;
					this.SendPropertyChanged("LSP_MA");
					this.OnLSP_MAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSP", DbType="NVarChar(200)")]
		public string TENSP
		{
			get
			{
				return this._TENSP;
			}
			set
			{
				if ((this._TENSP != value))
				{
					this.OnTENSPChanging(value);
					this.SendPropertyChanging();
					this._TENSP = value;
					this.SendPropertyChanged("TENSP");
					this.OnTENSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIANHAPSP", DbType="Int")]
		public System.Nullable<int> GIANHAPSP
		{
			get
			{
				return this._GIANHAPSP;
			}
			set
			{
				if ((this._GIANHAPSP != value))
				{
					this.OnGIANHAPSPChanging(value);
					this.SendPropertyChanging();
					this._GIANHAPSP = value;
					this.SendPropertyChanged("GIANHAPSP");
					this.OnGIANHAPSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SP_TINHTRANG", DbType="Bit")]
		public System.Nullable<bool> SP_TINHTRANG
		{
			get
			{
				return this._SP_TINHTRANG;
			}
			set
			{
				if ((this._SP_TINHTRANG != value))
				{
					this.OnSP_TINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._SP_TINHTRANG = value;
					this.SendPropertyChanged("SP_TINHTRANG");
					this.OnSP_TINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGSP", DbType="Int")]
		public System.Nullable<int> SOLUONGSP
		{
			get
			{
				return this._SOLUONGSP;
			}
			set
			{
				if ((this._SOLUONGSP != value))
				{
					this.OnSOLUONGSPChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGSP = value;
					this.SendPropertyChanged("SOLUONGSP");
					this.OnSOLUONGSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SERI", DbType="VarChar(30)")]
		public string SERI
		{
			get
			{
				return this._SERI;
			}
			set
			{
				if ((this._SERI != value))
				{
					this.OnSERIChanging(value);
					this.SendPropertyChanging();
					this._SERI = value;
					this.SendPropertyChanged("SERI");
					this.OnSERIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DUNGLUONG", DbType="VarChar(20)")]
		public string DUNGLUONG
		{
			get
			{
				return this._DUNGLUONG;
			}
			set
			{
				if ((this._DUNGLUONG != value))
				{
					this.OnDUNGLUONGChanging(value);
					this.SendPropertyChanging();
					this._DUNGLUONG = value;
					this.SendPropertyChanged("DUNGLUONG");
					this.OnDUNGLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_ANHSP", Storage="_ANHSPs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<ANHSP> ANHSPs
		{
			get
			{
				return this._ANHSPs;
			}
			set
			{
				this._ANHSPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_BINHLUAN", Storage="_BINHLUANs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<BINHLUAN> BINHLUANs
		{
			get
			{
				return this._BINHLUANs;
			}
			set
			{
				this._BINHLUANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CAPNHATGIA", Storage="_CAPNHATGIAs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CAPNHATGIA> CAPNHATGIAs
		{
			get
			{
				return this._CAPNHATGIAs;
			}
			set
			{
				this._CAPNHATGIAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETNHAP", Storage="_CHITIETNHAPs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CHITIETNHAP> CHITIETNHAPs
		{
			get
			{
				return this._CHITIETNHAPs;
			}
			set
			{
				this._CHITIETNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETXUAT", Storage="_CHITIETXUATs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CHITIETXUAT> CHITIETXUATs
		{
			get
			{
				return this._CHITIETXUATs;
			}
			set
			{
				this._CHITIETXUATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_KEMTHEO", Storage="_KEMTHEOs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<KEMTHEO> KEMTHEOs
		{
			get
			{
				return this._KEMTHEOs;
			}
			set
			{
				this._KEMTHEOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_KM", Storage="_KMs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<KM> KMs
		{
			get
			{
				return this._KMs;
			}
			set
			{
				this._KMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_PHIEUBAOHANH", Storage="_PHIEUBAOHANHs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<PHIEUBAOHANH> PHIEUBAOHANHs
		{
			get
			{
				return this._PHIEUBAOHANHs;
			}
			set
			{
				this._PHIEUBAOHANHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_SP_CO_KT", Storage="_SP_CO_KTs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<SP_CO_KT> SP_CO_KTs
		{
			get
			{
				return this._SP_CO_KTs;
			}
			set
			{
				this._SP_CO_KTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_SUACHUA", Storage="_SUACHUAs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<SUACHUA> SUACHUAs
		{
			get
			{
				return this._SUACHUAs;
			}
			set
			{
				this._SUACHUAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISANPHAM_SANPHAM", Storage="_LOAISANPHAM", ThisKey="LSP_MA", OtherKey="LSP_MA", IsForeignKey=true)]
		public LOAISANPHAM LOAISANPHAM
		{
			get
			{
				return this._LOAISANPHAM.Entity;
			}
			set
			{
				LOAISANPHAM previousValue = this._LOAISANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._LOAISANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISANPHAM.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._LOAISANPHAM.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._LSP_MA = value.LSP_MA;
					}
					else
					{
						this._LSP_MA = default(int);
					}
					this.SendPropertyChanged("LOAISANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANG_SANPHAM", Storage="_HANG", ThisKey="IDHANG", OtherKey="IDHANG", IsForeignKey=true)]
		public HANG HANG
		{
			get
			{
				return this._HANG.Entity;
			}
			set
			{
				HANG previousValue = this._HANG.Entity;
				if (((previousValue != value) 
							|| (this._HANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANG.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._HANG.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._IDHANG = value.IDHANG;
					}
					else
					{
						this._IDHANG = default(int);
					}
					this.SendPropertyChanged("HANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ANHSPs(ANHSP entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_ANHSPs(ANHSP entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CAPNHATGIAs(CAPNHATGIA entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CAPNHATGIAs(CAPNHATGIA entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CHITIETNHAPs(CHITIETNHAP entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETNHAPs(CHITIETNHAP entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CHITIETXUATs(CHITIETXUAT entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETXUATs(CHITIETXUAT entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_KEMTHEOs(KEMTHEO entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_KEMTHEOs(KEMTHEO entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_KMs(KM entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_KMs(KM entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_PHIEUBAOHANHs(PHIEUBAOHANH entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_PHIEUBAOHANHs(PHIEUBAOHANH entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_SP_CO_KTs(SP_CO_KT entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_SP_CO_KTs(SP_CO_KT entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_SUACHUAs(SUACHUA entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_SUACHUAs(SUACHUA entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SP_CO_KT")]
	public partial class SP_CO_KT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASP;
		
		private int _KT_ID;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
		private EntityRef<TS_KYTHUAT> _TS_KYTHUAT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnKT_IDChanging(int value);
    partial void OnKT_IDChanged();
    #endregion
		
		public SP_CO_KT()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			this._TS_KYTHUAT = default(EntityRef<TS_KYTHUAT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KT_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int KT_ID
		{
			get
			{
				return this._KT_ID;
			}
			set
			{
				if ((this._KT_ID != value))
				{
					if (this._TS_KYTHUAT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKT_IDChanging(value);
					this.SendPropertyChanging();
					this._KT_ID = value;
					this.SendPropertyChanged("KT_ID");
					this.OnKT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_SP_CO_KT", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.SP_CO_KTs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.SP_CO_KTs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TS_KYTHUAT_SP_CO_KT", Storage="_TS_KYTHUAT", ThisKey="KT_ID", OtherKey="KT_ID", IsForeignKey=true)]
		public TS_KYTHUAT TS_KYTHUAT
		{
			get
			{
				return this._TS_KYTHUAT.Entity;
			}
			set
			{
				TS_KYTHUAT previousValue = this._TS_KYTHUAT.Entity;
				if (((previousValue != value) 
							|| (this._TS_KYTHUAT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TS_KYTHUAT.Entity = null;
						previousValue.SP_CO_KTs.Remove(this);
					}
					this._TS_KYTHUAT.Entity = value;
					if ((value != null))
					{
						value.SP_CO_KTs.Add(this);
						this._KT_ID = value.KT_ID;
					}
					else
					{
						this._KT_ID = default(int);
					}
					this.SendPropertyChanged("TS_KYTHUAT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SUACHUA")]
	public partial class SUACHUA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SC_ID;
		
		private string _KH_SDT;
		
		private string _MASP;
		
		private string _SC_NOIDUNG;
		
		private System.Nullable<System.DateTime> _SC_NGAYNHAN;
		
		private System.Nullable<int> _SC_TIEN;
		
		private System.Nullable<System.DateTime> _SC_NGAYHT;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSC_IDChanging(int value);
    partial void OnSC_IDChanged();
    partial void OnKH_SDTChanging(string value);
    partial void OnKH_SDTChanged();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnSC_NOIDUNGChanging(string value);
    partial void OnSC_NOIDUNGChanged();
    partial void OnSC_NGAYNHANChanging(System.Nullable<System.DateTime> value);
    partial void OnSC_NGAYNHANChanged();
    partial void OnSC_TIENChanging(System.Nullable<int> value);
    partial void OnSC_TIENChanged();
    partial void OnSC_NGAYHTChanging(System.Nullable<System.DateTime> value);
    partial void OnSC_NGAYHTChanged();
    #endregion
		
		public SUACHUA()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SC_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SC_ID
		{
			get
			{
				return this._SC_ID;
			}
			set
			{
				if ((this._SC_ID != value))
				{
					this.OnSC_IDChanging(value);
					this.SendPropertyChanging();
					this._SC_ID = value;
					this.SendPropertyChanged("SC_ID");
					this.OnSC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KH_SDT", DbType="VarChar(15)")]
		public string KH_SDT
		{
			get
			{
				return this._KH_SDT;
			}
			set
			{
				if ((this._KH_SDT != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKH_SDTChanging(value);
					this.SendPropertyChanging();
					this._KH_SDT = value;
					this.SendPropertyChanged("KH_SDT");
					this.OnKH_SDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SC_NOIDUNG", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SC_NOIDUNG
		{
			get
			{
				return this._SC_NOIDUNG;
			}
			set
			{
				if ((this._SC_NOIDUNG != value))
				{
					this.OnSC_NOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._SC_NOIDUNG = value;
					this.SendPropertyChanged("SC_NOIDUNG");
					this.OnSC_NOIDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SC_NGAYNHAN", DbType="DateTime")]
		public System.Nullable<System.DateTime> SC_NGAYNHAN
		{
			get
			{
				return this._SC_NGAYNHAN;
			}
			set
			{
				if ((this._SC_NGAYNHAN != value))
				{
					this.OnSC_NGAYNHANChanging(value);
					this.SendPropertyChanging();
					this._SC_NGAYNHAN = value;
					this.SendPropertyChanged("SC_NGAYNHAN");
					this.OnSC_NGAYNHANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SC_TIEN", DbType="Int")]
		public System.Nullable<int> SC_TIEN
		{
			get
			{
				return this._SC_TIEN;
			}
			set
			{
				if ((this._SC_TIEN != value))
				{
					this.OnSC_TIENChanging(value);
					this.SendPropertyChanging();
					this._SC_TIEN = value;
					this.SendPropertyChanged("SC_TIEN");
					this.OnSC_TIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SC_NGAYHT", DbType="DateTime")]
		public System.Nullable<System.DateTime> SC_NGAYHT
		{
			get
			{
				return this._SC_NGAYHT;
			}
			set
			{
				if ((this._SC_NGAYHT != value))
				{
					this.OnSC_NGAYHTChanging(value);
					this.SendPropertyChanging();
					this._SC_NGAYHT = value;
					this.SendPropertyChanged("SC_NGAYHT");
					this.OnSC_NGAYHTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_SUACHUA", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.SUACHUAs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.SUACHUAs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_SUACHUA", Storage="_KHACHHANG", ThisKey="KH_SDT", OtherKey="KH_SDT", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.SUACHUAs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.SUACHUAs.Add(this);
						this._KH_SDT = value.KH_SDT;
					}
					else
					{
						this._KH_SDT = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
